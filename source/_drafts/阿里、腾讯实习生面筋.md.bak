---
title: 阿里、腾讯实习生面筋
date: 2016-05-09 15:52:24
tags:
---

又到了实习季，作为一个不务正业（不会写matlab）的水硕，只能寄希望于互联网企业的收留，所以就投了很多互联网企业的实习生。

首先是阿里，阿里是内推的。三天之后接到第一个电话面试，主要问了项目经历（我的项目全是硬件的，欺负他听不懂胡吹了一通），然后问了对 Java 以及相关框架（SSH 大法）的了解，以及关于这些框架的进一步问题，比如 Spring 有哪些特点啊（IoC，DI，AOP ），然后又问了 AOP 是怎么实现的（当时看都没看 Java，我答的是字节码增强，跪...），IoC 有什么优点等等，最后问了能够实习多久。整体感觉比较轻松，面试官也很温和。

又过了三四天，正在教研室搬砖接到第二次电话面试，匆匆忙忙跑到楼外，上气不接下气的作自我介绍，表现的很差。

这里提一下，如果遇到这种情况，可以说现在不方便，另外约一个时间，第一次就是事先约了时间，这样就从容地多，第二次刚打来电话就面试，就发挥的很差。

二面首先依然是自我介绍，然后他听我说主要用 python，就问了 python 的问题，第一个是 `type` 和 `isinstance` 的区别。然后问了我一般都用到哪些数据结构，我答数组、链表、哈希表，然后就想不到还有什么了。当时确实没怎么准备，稍微复习了一下就知道应该答 jdk Collection 里面的那些数据结构。然后他又问我哈希表怎么遍历键值对，我说使用 `for k,v in xxx` 这样的语句就行了，现在想起来真是太 low 了，他想听到的肯定是哈希表底层的实现中怎么遍历键值对（哈希表一边使用数组存储，数组每一个元素都是一个链表），而不是我这样回答的语法，这太浅显了。

然后他又问了一个算法，给两个链表，将他们合并为一个并且去除重复的元素，当时我给说可以维护一个哈希表，每插入一个元素之前检查该元素是否已存在哈希表中，然后又补充一句可以使用 python 的 set 类型去重。后来看了 jdk，发现这特么的用 `LinkedHashSet` 不就完了么。总之二面比较糟糕，面试官也一直很严肃，时间又选的很匆忙。

本来以为已经挂了，结果又过了三四天接到通知，让到天府软件园面试。但是那天我们教研室要开例会，所以我就约了另外一天。来到天府软件园，感觉蚂蚁金服好高大上啊，这天只有我一个人，貌似别人都忘了还要面试我，还是现场打电话给帮我内推的部门老大。等了很久，部门老大抱着笔记本下来了，一边面试还一边在电脑上和别人聊项目。这次我准备的比较充分，首先是自我介绍，然后问了问项目，问我项目中用到了什么技术。我说我用 C++ 实现了一个反射，然后他让我写一下，结果我一直准备 java，他却一直让我写 C++，蛋碎，C++ 继承我连 `public` 都没写。然后又问 jvm 有哪些部分（PC,Heap,VM Stack,Method Area,Native Stack），每个部分都有什么用，我给他解释 PC 时说就相当于硬件的程序计数器，只是 jvm 的 PC 是线程私有的，然后 native 方法时是 undefined，但他表示没不清楚...然后又问了 heap 上怎么实现垃圾回收，为什么能够保证环形引用也能够被成功回收，这些都是我看了很久的所以答得比较好。

然后他又问另外一个项目，问如何实现判断当前字符是不是位于注释中的，两种情况，一种行注释`//`，一种块注释`/* */`，让写代码。这么简单的，我却没写对，我块注释会错判这种类型`/* */ x /* */`。其实这个很简单只需要从当前字符往前查找`/*`和`*/`，如果先找到`/*`就是在注释中，否则没在。然后有问了些啥记不太清楚了，最后他说就到这里，你有什么要问的，我说如果进来了有没有人带啊，他说有什么培训什么的。其实这一面感觉当时还算好，但阿里到这里就为止了，想想确实是，虽然理论答得还好，但写代码犯了很多错误，细节决定成败啊！

阿里失败后又投腾讯，腾讯内推都要笔试，笔试了一堆 C 的东西，尤其是什么 `sizeof`之类的，很恶心。笔试答得不怎么好，都没留意，后来居然收到了短信让去面试。一面面试官人很 nice，很年轻。让我看他电脑上的几个问题，第一个还是`sizeof`，这个看一下就没问题了，首先是数组，没退化就是 数组长度*数据类型长度，记得字符串最后有个`\0`，如果是参数那就已经退化为指针，x64、x32机器指针多长就不用说了吧。然后让看一段代码中间有哪些错，主要的错有 没判断输入指针是否有效，输入值是否有效，对特殊情况（比如0个数据、只有一个节点）是否需要特殊处理，是否传引用，返回值检查，内存是否释放等等，当时这个题是这样的：
```c++
void getMem(char* p){
  p=malloc(10*sizeof(char));
}

int main(){
  char* p;
  getMem(p);
  strcpy(p,"hello");
  printf("%s",p);
}
```
看看你能找出多少个错误？

然后又让实现 `void *memcpy(void * dest, const void *src, size_t n)`。

然后他说可以了，我嘴贱说这么快就完了，他说那就在做做这个智力题吧
> 十堆看起来完全相同的粉末，一堆遇水2分钟变蓝，现在有四个瓶子，无限多水，最短多久测完（只能瓶里测）。  

我很快给出4分钟的方案，他说那能不能2分钟呢？我试了一下，没答出来，他让我说说思路，我说如果能肯定是一种粉末要放到多个瓶子中，根据多个瓶子的变色推断出会变蓝的那堆粉末，他说思路是对的。

后来我出来在地铁上就想出来了，果然一有压力就不行，没有压力就好多了。解决方案如图：
![solution](/images/zhiliti.png)

每一个圈代表一个瓶子，1~10代表不同堆粉末，问题转化为，怎么保证每堆粉末都只属于一个交集中，可以看到 3 4 5 8 已经成功分出来了，现在用了3个瓶子，还剩下1个，装上1 6 9，这样每一种粉末都只属于一个交集中，实现了2分钟分辨变蓝粉末的目的。

第二天是二面，二面人少了很多，但等了很久。二面面试官是一个中年男子，看上去比较严厉。他也不让作自我介绍，就沉默这看我的简历，当时真是紧张得很。第一个问题是 怎么生成随机数，我说`rand`，他说那`rand`是怎么生成的呢？我就讲了讲 `m序列发生器`，他不懂硬件，就说那其实你这个生成的数是固定的嘛！我说是啊，肯定是伪随机序列啊，但这伪随机序列能够保证自相关性很好，互相关性很差。他说那你证明一下呢？我勒个xxx，这我怎么证明，我只有说这个是数学知识，我确实不知道怎么证明。

然后又问我几个概率问题，100个数中随机抽取10个，重复的概率？我说不重复的种类有 ${100}^{10}$ (错了，应该是$A_{100}^{10}$，因为除数认为他们有顺序的)，所有的种类是${100}^{10}$，所以重复的概率为{% math %}1-\frac{C_{100}^{10}}{100^{10}}{% endmath %}，然后又跟他解释了一下，算是过了。然后又问如何使用 shell来获取'|'分割的文本中的第三列，我写了下 awk 的脚本`awk -d| { print $3 }`，他说`|`能这么写么？我勒个去，我居然连管道符都没转义...

最后问一个算法，找出序列中满足所有左边的数都小于当前数、所有右边的数都大于当前数的下标。比如 `1 2 4 11 10 14 15` 中 `11 10` 就不满足。

我一开始联想到逆序对，给他讲了很久怎么用归并排序实现，好不容易讲清楚了，他说这和排序后比较不同的有什么区别？都是`O(nlogn)`的算法，有`O(n)`的算法

我想了好久没想出来，然后我说擂台法，每次记录最大的，比这最大的小都是错的，但我自己否定了。

他问我什么是擂台法，我说这个不行，然后又说两端各自设一个指针，往中间收缩...还是不行，他又问我什么是擂台法，我就给他讲了，他说那如果只满足**左边的数都小于当前数**这个条件擂台法行不行？我说行，然后突然顿悟原来他一直在提醒我，这个算法只需要第一次从左往右擂台法找到所有满足**左边的数都小于当前数**条件的，第二次从右往左找到所有满足**所有右边的数都大于当前数**的就行了。真的还是十分感谢他，我当时都有点想放弃了，而且他问我什么是擂台法，我前几次都没回答，他还是耐心的问。算法想出来了后就让写代码。写代码依然是需要注意之前说的检测。写完之后他看了没什么问题，就说就到这里吧。

当时真是心灰意懒，觉得这么烂肯定没戏了。也许这种问题对于 ACM 大神只是水题，对于我这种没怎么搞过算法的通信狗却真是要了命。没想到最终还是进了HR面。

果然HR面试官是一个女的，问的问题也都是那些很常规的HR面试问题。比如说，你不是计算机专业的为什么要来投后台开发、家是哪里的、是不是独生子女、说说你项目的分工与活动、别人是怎么评价你、有没有什么体育方面的爱好等等。

最后成功拿到Offer。